# 2
print('x y z w')  --->  вывести строчку
print(f'сумма{x}') ---> вывести форматированую строчку {переменная}
for i in range(1, 100, 2) ---> цикл с счетчиком от 1 до 100 с шагом 2
for i in s ---> перебор значений списка s
if (not(y<=x) or (z<=w) or not(z))==False: ---> ("<=" импликация) ('or' или) ('and' и) ('not' нет)
if not sp: ---> проверка списка на наличие элементов
# 5
bin(i)[2:] ---> перевод числа i в 2-ичную систему(срез нужен для отрезания технической записи числа)
int('010101010', 2) ---> перевод строки из 2-ичной системы в десятичное число
num.count('1') ---> подсчет количества единиц в строке или списке num
break ---> принудительный выход из цикла
continue ---> пропуск итерации в цикле
pass ---> заглушка
# 6
from turtle import * ---> импортирование модуля черепахи
goto(x,y) ---> черепаха идет в точку (x, y)
right(x), left(x), forward(x) ---> движение черепахи вперелд на x единиц, поворот вправо или влево на х градусов
dot(x) ---> точка радиуса x
pu() ---> поднять перо
done ---> конец программы
# 8
str(a) ---> перевод числа а в строку
spisok.index('6') возвращает индекс первого элемента с данным значением
len(s) ---> возвращает длинц списка s
10 % 2 ---> остаток от деления
10 // 2 ---> целочисленное деление
10**2 ---> возведение в степень
spisok[0] ---> выбранный элемент списка
from itertools import product
nums = product('01234567', repeat=5) ---> все комбинации данной строчки
spisok.split() ---> разбиение строки на элементы списка
''.join(spisok) ---> перевод спика в строку
spisok = [] ---> пустой список
spisok.append(a) ---> добавление элемента а в конец списка
# 12
if all(spisok) ---> выполнение условия, если каждый объект списка - правда
if all(uslovie) ---> выполнение нескольких условий
# 16
import sys
sys.setrecursionlimit(2500) ---> увельчение лимита рекурсии
def f(n):
  return n*f(n - 1) ---> рекурсия(вызов функции из этой же функции)
# 17
open('17.txt') as f:
   nums=[int(x) for x in f] ---> чтение многострочного файла
   n = f.readline()
   a = abs(-1) ---> модуль числа
   max(последовательность) ---> максимальное значение из данных
   min(последовательность) ---> м значение из данных
# 23
  (count += 1) <=> (count = count + 1)
# 24
  s = s.replace('A', 'O') ---> замена значения в строке или списке
# 25
  num[start:stop:step] ---> срез [старт:конец:шаг]
  num[::-1] ---> чтение списка с конца
# 26
  s = sorted(spisok, reverse = True) 
  s.sort(reverse = True) ---> сортировка по убыванию
# 27
  spisok = spisok + spisok ---> слияние списка
